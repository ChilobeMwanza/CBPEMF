package dynamic_emf_tests;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;

import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.resource.ResourceSet;
import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;
import org.eclipse.emf.ecore.xmi.impl.EcoreResourceFactoryImpl;
import org.junit.*;

import impl.DeltaResourceImpl;

abstract class TestBase 
{
	protected static final String FILE_SAVE_LOCATION = "university.txt";
	protected static final String ECORE_FILE_LOCATION = new File("").getAbsolutePath()+"/model/university.ecore";
	protected EPackage ePackage = null;
	
	@BeforeClass
	public void runOnceBeforeClass()
	{
		/* Dynamically register epackage */
		Resource.Factory.Registry.INSTANCE.getExtensionToFactoryMap().
			put("ecore", new EcoreResourceFactoryImpl())
			;Resource.Factory.Registry.INSTANCE.getExtensionToFactoryMap().
			put("*", new EcoreResourceFactoryImpl()); 
	
		ResourceSet rs = new ResourceSetImpl();
				
		Resource r = rs.getResource(URI.createFileURI(ECORE_FILE_LOCATION), true);
		
		EObject eObject = r.getContents().get(0);
		
		if (eObject instanceof EPackage) 
		{
		    ePackage = (EPackage)eObject;
		    EPackage.Registry.INSTANCE.put(ePackage.getNsURI(), ePackage);
		    rs.getPackageRegistry().put(ePackage.getNsURI(), ePackage);
		}
	}
	
	@Before
	public void runOnceBeforeTest()
	{
		/*Delete save file if it exists*/
		File file = new File(FILE_SAVE_LOCATION);
		try {
			Files.deleteIfExists(file.toPath());
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		/*Configure Epackage*/
		
	}
	
	Resource loadResource()
	{
		//Load persisted model into resource contents
		ResourceSetImpl rs = new ResourceSetImpl();
		rs.getResourceFactoryRegistry().getExtensionToFactoryMap().put
		("txt", new Resource.Factory()
		{
			@Override
			public Resource createResource(URI uri)
			{
				return new DeltaResourceImpl(uri);
			}
		});
	
	EPackage pkg = getEPackageDynamically();
	
	rs.getPackageRegistry().put(pkg.getNsURI(), 
			pkg);
	
	EPackage.Registry.INSTANCE.put(pkg.getNsURI(), pkg);
	if(EPackage.Registry.INSTANCE.containsKey(pkg.getNsURI()))
		System.out.println(true);
	else
		System.out.println(false);
  
	Resource res = rs.createResource(URI.createFileURI(fileSaveLocation));
	try {
		res.load(null);
	} catch (IOException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	
	return res;
	}
}
