package drivers;

import java.util.Iterator;

import org.eclipse.emf.common.util.TreeIterator;
import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.util.EcoreUtil;

import change.AddEObjectsToEReferenceEvent;
import change.AddEObjectsToResourceEvent;
import change.AddObjectsToEAttributeEvent;
import change.Changelog;
import university.University;

public class ResourceContentsToEventsConverter 
{
	Changelog changelog;
	Resource resource;
	private  final String classname = this.getClass().getSimpleName();
	
	public ResourceContentsToEventsConverter(Changelog changelog, Resource resource)
	{
		this.changelog = changelog;
		this.resource = resource;
	}
	
	public void convert()
	{
		if(resource.getContents().isEmpty())
			return;
		
	
		changelog.clear();
		
		AddEObjectsToResourceEvent e = new AddEObjectsToResourceEvent (resource.getContents());
		changelog.addEvent(e);
		
	
		
		for(EObject obj : resource.getContents())
		{
			createSetAttributeEntries(obj);
			handleContainments(obj);
			
		}
	}
	
	private void handleContainments(EObject root) 
	{
		
		
		
		University uni = (University)root;
		
		//System.out.println(uni.eCrossReferences().get(0));

		for(Iterator<EObject> it = root.eAllContents(); it.hasNext();) //containment refs
		{
			
			System.out.println(1);
			EObject obj = it.next();
			
			createAddEObjectsToEReferenceEvent(obj.eContainer(),obj,obj.eContainmentFeature());
			
			
			createSetAttributeEntries(obj);
		}
		
		for(EObject obj : root.eCrossReferences())
		{
			
			
			//System.out.println(EcoreUtil.resolve(obj, resource));
			
			
			
			for(EReference rf : root.eClass().getEAllReferences())
			{
				if(!rf.isContainment())
				{
					if(root.eIsSet(rf))
					{
						createAddEObjectsToEReferenceEvent(root,obj,rf);
						createSetAttributeEntries(obj);
					}
				}
			}
			//System.exit(0);
			
		}
	}
	
	private void createAddEObjectsToEReferenceEvent
		(EObject focusObject,EObject addedObject, EReference eRef)
	{
		AddEObjectsToEReferenceEvent e = 
				new AddEObjectsToEReferenceEvent(focusObject,addedObject,eRef);
		
		changelog.addEvent(e);
	}
	
	private void createSetAttributeEntries(EObject focusObject)
	{
		for(EAttribute attr : focusObject.eClass().getEAllAttributes())
		{
			if(focusObject.eIsSet(attr))
			{
				AddObjectsToEAttributeEvent e =
						new AddObjectsToEAttributeEvent(focusObject,attr,focusObject.eGet(attr));
				changelog.addEvent(e); //add to entry
			}
		}
	}
}
