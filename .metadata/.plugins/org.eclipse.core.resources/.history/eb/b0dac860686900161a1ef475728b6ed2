package change;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;

import impl.CBPResource;

public class EReferenceEvent extends Event
{
	private NotifierType notifierType;
	
	private List<EObject> obj_list = new ArrayList<EObject>();
	
	private EObject focus_obj;
	
	private EReference eref;
	
	private enum EReferenceEventType
	{
		SET,
		UNSET;
	}
	
	private EReferenceEventType eReferenceEventType;
	
	/*@SuppressWarnings("unchecked")
	public EReferenceEvent(EObject newValue, NotifierType notifiertype, EReferenceEventType eReferenceEventType)
    {
        super(Event.SET_EREFERENCE_EVENT);
        
       
      
        if(newValue instanceof Collection)
        	this.obj_list = (List<EObject>) newValue;
        
        else
        	this.obj_list.add((EObject) newValue);
        
        this.notifierType = notifierType;
    }*/
    
    @SuppressWarnings("unchecked")
	public EReferenceEvent(EObject focus_obj,EObject newValue,EReference eref, NotifierType notifierType, EReferenceEventType eReferenceEventType)
    {
        super(Event.EREFERENCE_EVENT);
        
        this.focus_obj = focus_obj;
        
        if(newValue instanceof Collection)
        	this.obj_list = (List<EObject>) newValue;
        
        else
        	this.obj_list.add((EObject) newValue);
        
        this.notifierType = notifierType;
        
        this.eref = eref;
        
        this.eReferenceEventType = eReferenceEventType;
    }
    
    
    @SuppressWarnings("unchecked")
    public EReferenceEvent(Notification n,EReferenceEventType eReferenceEventType )
    {
    	
        super(Event.EREFERENCE_EVENT);
        
        Object newValue = n.getNewValue();
        
        if(eReferenceEventType == EReferenceEventType.UNSET)
        	newValue = n.getOldValue();
        
        
        if(newValue instanceof Collection)
        	this.obj_list = (List<EObject>) newValue;
        
        else
        	this.obj_list.add((EObject) newValue);
        
         if(n.getNotifier() instanceof CBPResource)
         {
             this.notifierType = NotifierType.RESOURCE;
         }
         else if(n.getNotifier() instanceof EObject)
         {
             this.notifierType = NotifierType.EOBJECT;
             this.focus_obj = (EObject) n.getNotifier();
             this.eref = (EReference) n.getFeature();
         } 
    }
    
    public NotifierType getNotifierType()
    {
        return this.type;
    }
    
    public EObject getFocusObj()
    {
        return focus_obj;
    }
    
    public List<EObject> getEObjectList()
    {
        return this.obj_list;
    }
    
    public EReference getEReference()
    {
        return this.eref;
    }
}
