package main;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;

import java.util.Map;
import java.util.Scanner;
import java.util.StringTokenizer;

import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EcorePackage;

public class TextDeserializer 
{
	private enum EventType
	{
		NAMESPACEURI,
		ADD;
	}
	private PersistenceManager persistenceManager;
	//private String fileLocation;
	
	public TextDeserializer(PersistenceManager persistenceManager)
	{
		this.persistenceManager = persistenceManager;
	}
	
	
	public void load(Map<?,?> options) throws IOException
	{
		//fileLocation = (String)options.get("FILE_LOCATION");
		
		BufferedReader br = new BufferedReader(
				new InputStreamReader(new FileInputStream(persistenceManager.getURI().path()), persistenceManager.TEXT_ENCODING));
		
		String line;
		
		while((line = br.readLine()) != null)
		{
			
			System.out.println(line);
			StringTokenizer st = new StringTokenizer(line);
			
			
			
			Scanner sc = new Scanner(line);
			//EventType eventType = EventType.valueOf(sc.next());
			System.out.println(sc.next());
			sc.close();
			/*while(st.hasMoreElements())
			{ 
				  eventType = EventType.valueOf
						 (st.nextElement().toString());
				 break;
			} */
			
			
				/*switch(eventType)
				{
				case ADD:
					break;
				case NAMESPACEURI:
					break;
				default:
					break;
				}	*/
			
			
			
		
		}
		br.close();
		
		loadMetamodel("dfd");
	}
	
	
	private EPackage loadMetamodel(String metamodelURI)
	{
		//EPackage ePackage = EPackage.Registry.INSTANCE.getEPackage("http://io.emf.change_based_persistence.text");
		EPackage ePackage = null;
		if(EPackage.Registry.INSTANCE.containsKey(metamodelURI))
			ePackage = EPackage.Registry.INSTANCE.getEPackage(metamodelURI);
		return ePackage;
	}
}
