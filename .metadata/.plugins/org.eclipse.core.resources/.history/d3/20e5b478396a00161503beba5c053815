package change;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EObject;

public abstract class EAttributeEvent extends Event
{
	private EObject focusObject;
	
	private EAttribute eAttribute;
	
	private List<Object> eAttributeValuesList = new ArrayList<Object>();
	
	public enum EAttributeEventType
	{
		SET,
		UNSET;
	}
	
	EAttributeEventType eAttributeEventtype;
	 
    @SuppressWarnings("unchecked")
	public EAttributeEvent(int eventType,EObject focusObject, EAttribute eAttribute, Object value, EAttributeEventType eAttributeEventtype)
    {
       super(eventType);
       
       this.focusObject = focusObject;
       this.eAttribute = eAttribute;
       
       if(value instanceof Collection)
    	   this.attr_values_list = (List<Object>) value;
       
       else
    	   this.attr_values_list.add(value);
       
       this.type = type;
    }
    
    @SuppressWarnings("unchecked")
    public EAttributeEvent(Notification n, EAttributeEventType type)
    {
    	super(Event.EATTRIBUTE_EVENT);
        
        this.type = type;
        
        Object value = null;
        
        if(type == EAttributeEventType.SET)
        {
        	value = n.getNewValue();
        }
        else
        {
        	value = n.getOldValue();
        }
        
        this.focus_obj = (EObject) n.getNotifier();
        
        this.attr = (EAttribute) n.getFeature();
        
        if(value instanceof Collection)
     	   this.attr_values_list = (List<Object>) value;
        
        else
     	   this.attr_values_list.add(value);
    }
    
    public EObject getFocusObj()
    {
        return this.focus_obj;
    }
    
    public EAttribute getEAttribute()
    {
        return this.attr;
    }
    
    public List<Object> getAttributeValuesList()
    {
        return this.attr_values_list;
    }
    
    public EAttributeEventType getType()
    {
    	return type;
    }

}
