package tests;

import static org.junit.Assert.assertTrue;

import java.io.File;
import java.io.IOException;
import java.util.List;

import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.resource.ResourceSet;
import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.xmi.impl.EcoreResourceFactoryImpl;
import org.junit.After;
import org.junit.Test;

import impl.DeltaResourceImpl;
import university.UniversityFactory;

public class SystemTest extends TestBase 
{
	private EPackage ePackage = null;
	private List<EObject> savedContentsList = null;
	private List<EObject> loadedContentsList = null;
	private String ecoreFileLocation = new File("").getAbsolutePath()+"/model/university.ecore";
	
	
	@Override
	public void runOnceBeforeTest()
	{
		super.runOnceBeforeTest();
		  
	    //Register epackage reflectively
		
		Resource.Factory.Registry.INSTANCE.getExtensionToFactoryMap().put(
			    "ecore", new EcoreResourceFactoryImpl());Resource.Factory.Registry.INSTANCE.
			    getExtensionToFactoryMap().put("*", new EcoreResourceFactoryImpl()); 
		
		
		ResourceSet rs = new ResourceSetImpl();
		
		Resource r = rs.getResource(URI.createFileURI(ecoreFileLocation), true);
		
		EObject eObject = r.getContents().get(0);
		
		if (eObject instanceof EPackage) 
		{
		    ePackage = (EPackage)eObject;
		    rs.getPackageRegistry().put(ePackage.getNsURI(), ePackage);
		}	
	}
	
	@After
	public void runOnceAfterTest()
	{
		ePackage = null;
		savedContentsList = null;
		loadedContentsList = null;
	}
	
	@Test
	public void testTextSerialisation() throws IOException
	{
		Resource res = new DeltaResourceImpl(URI.createURI(fileSaveLocation));
		
		EObject university = createEObject("University");
				
		
		res.getContents().add(university);
		
		res.save(null);
		
		savedContentsList = getResourceContentsList(res);
		
		Resource loadedRes = loadResource();
		
		loadedContentsList = getResourceContentsList(loadedRes);
		
		System.out.println("saved list:");
		for(EObject obj : savedContentsList)
		{
			System.out.println(obj);
		}
		
		System.out.println("loaded list:");
		for(EObject obj : loadedContentsList)
		{
			System.out.println(obj);
		}
		assertTrue(EcoreUtil.equals(savedContentsList, loadedContentsList));
		
		
	}
	
	private EObject createEObject(String eClassName) //does this need to be a method?
	{
		return ePackage.getEFactoryInstance().create((EClass)
				ePackage.getEClassifier(eClassName));
	}
}
