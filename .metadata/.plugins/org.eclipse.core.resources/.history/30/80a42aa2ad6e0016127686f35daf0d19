package generated_emf_tests;

import static org.junit.Assert.assertTrue;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.junit.*;

import university.Department;
import university.Library;
import university.Student;
import university.University;
import university.UniversityFactory;

import university.Vehicle;
import impl.CBPTextResourceImpl;
public class DeleteFromResourceTests extends TestBase
{
	 private List<EObject> savedContentsList = null;
	 private List<EObject> loadedContentsList = null;
	
	 @After
	 public void runAfterTestMethod()
	 {
		 savedContentsList = null;
		 loadedContentsList = null;
	 }
	
	/*
	 * Tests (adding and) deleting a single item
	 */
	//@Test
	public void testDeleteSingleFromResource() throws IOException
	{
		//Resource res = new CBPTextResourceImpl(URI.createURI(fileSaveLocation),ePackage);
		
		/*Create some objects */
		University uni = UniversityFactory.eINSTANCE.createUniversity();
		res.getContents().add(uni);
		
		res.getContents().add(uni);
		
		res.getContents().remove(uni);
        
		res.save(null);
		
		savedContentsList = getResourceContentsList(res);
		
		Resource loadedRes = loadResource();
		
		loadedContentsList = getResourceContentsList(loadedRes);
		
		assertTrue(EcoreUtil.equals(savedContentsList, loadedContentsList));
	}
	
	@Test
	public void testDeleteRepeatedFromResource() throws IOException
	{
		//Resource res = new CBPTextResourceImpl(URI.createURI(fileSaveLocation),ePackage);
		
		University uni1 = UniversityFactory.eINSTANCE.createUniversity();
		University uni2 = UniversityFactory.eINSTANCE.createUniversity();
		Library lib1 = UniversityFactory.eINSTANCE.createLibrary();
		Department dep1 = UniversityFactory.eINSTANCE.createDepartment();
		
		res.getContents().add(uni1);
		res.getContents().add(uni2);
		res.getContents().add(lib1);
		res.getContents().add(dep1);
		
		res.getContents().remove(uni2);
		res.getContents().remove(dep1);
		
        res.save(null);
		
		savedContentsList = getResourceContentsList(res);
		
		Resource loadedRes = loadResource();
		
		loadedContentsList = getResourceContentsList(loadedRes);
		
		assertTrue(EcoreUtil.equals(savedContentsList, loadedContentsList));
	}
	
	/*
	 * Tests (adding and) deleting a collection of objects 
	 */
	@Test
	public void testDeleteCollectionFromResource() throws IOException
	{
		//Resource res = new CBPTextResourceImpl(URI.createURI(fileSaveLocation),ePackage);
		
		University uni1 = UniversityFactory.eINSTANCE.createUniversity();
		University uni2 = UniversityFactory.eINSTANCE.createUniversity();
		Library lib1 = UniversityFactory.eINSTANCE.createLibrary();
		Department dep1 = UniversityFactory.eINSTANCE.createDepartment();
		
		List <EObject> list = new ArrayList<EObject>();
		list.add(uni1);
		list.add(uni2);
		list.add(lib1);
		list.add(dep1);
		
		res.getContents().addAll(list);
		
		List<EObject> removelist = new ArrayList<EObject>();
		removelist.add(dep1);
		removelist.add(uni1);
		
		res.getContents().removeAll(removelist);
		
		res.save(null);
		
		savedContentsList = getResourceContentsList(res);
		
		Resource loadedRes = loadResource();
		
		loadedContentsList = getResourceContentsList(loadedRes);
		
		assertTrue(EcoreUtil.equals(savedContentsList, loadedContentsList));
	}
	
	/*
	 * Combines the various methods of adding and deleting items from the resource
	 */
	@Test
	public void testAllDeleteFromResource() throws IOException
	{
		//Resource res = new CBPTextResourceImpl(URI.createURI(fileSaveLocation),ePackage);
		
		University uni1 = UniversityFactory.eINSTANCE.createUniversity();
		University uni2 = UniversityFactory.eINSTANCE.createUniversity();
		Vehicle v1 = UniversityFactory.eINSTANCE.createVehicle();
		
		res.getContents().add(uni1);
		res.getContents().add(uni2);
		res.getContents().add(v1);
		
		List<EObject> list = new ArrayList<EObject>();
		Library lib1 = UniversityFactory.eINSTANCE.createLibrary();
		Library lib2 = UniversityFactory.eINSTANCE.createLibrary();
		Department d1 = UniversityFactory.eINSTANCE.createDepartment();
		Student s1 = UniversityFactory.eINSTANCE.createStudent();
		
		list.add(lib1);
		list.add(lib2);
		list.add(d1);
		list.add(s1);
		
		res.getContents().addAll(list);
		
		List<EObject> removelist = new ArrayList<EObject>();
		removelist.add(lib1);
		removelist.add(v1);
		removelist.add(d1);
		
		res.getContents().remove(0);
		res.getContents().remove(lib2);
		res.getContents().removeAll(removelist);
		
		res.save(null);
		
		savedContentsList = getResourceContentsList(res);
		
		Resource loadedRes = loadResource();
		
		loadedContentsList = getResourceContentsList(loadedRes);
		
		assertTrue(EcoreUtil.equals(savedContentsList, loadedContentsList));
	}
}
