package change;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;
import java.util.Map;

import org.eclipse.emf.ecore.EObject;

import gnu.trove.list.array.TIntArrayList;
import gnu.trove.map.TIntObjectMap;
import gnu.trove.map.TObjectIntMap;
import gnu.trove.map.hash.TIntObjectHashMap;
import gnu.trove.map.hash.TObjectIntHashMap;


public class Changelog 
{
	private final List<Event> eventList;
	
	private final TObjectIntMap<EObject> eObjectToIDMap = new TObjectIntHashMap<EObject>();

	private final String classname = this.getClass().getSimpleName();
	
	private static int current_id = 0; 
	
	public Changelog()
	{
		eventList = new ArrayList<Event>();
	}
	
	public boolean addObjectToMap(EObject obj)
	{
		if(!eObjectToIDMap.containsKey(obj))
		{
			eObjectToIDMap.put(obj, current_id);
			
			current_id = current_id +1;
			return true;
		}
		return false;
	}
	
	public boolean addObjectToMap(EObject obj, int id)
	{
		if(!eObjectToIDMap.containsKey(obj))
		{
			eObjectToIDMap.put(obj, id);
			
			if(id >= current_id)
			{
				current_id = id + 1;
			}
			return true;
		}
		return false;
	}
	
	public void deleteEObjectFromMap(EObject obj)
	{
		eObjectToIDMap.remove(obj);
		
		if(eObjectToIDMap.containsKey(obj)) //tbr
		{
			System.out.println(classname+ " nope!!");
			System.exit(0);
		}
	}
	
	public int getObjectId(EObject obj)
	{
		if(!eObjectToIDMap.containsKey(obj)) //tbr
		{
			System.out.println(classname+" search returned false");
			System.exit(0);
		}
		return eObjectToIDMap.get(obj);
	}

	public void addEvent(Event e)
	{
		eventList.add(e);
	}
	
	public void removeEvent(Event e)
	{
		eventList.remove(e);
	}
	
	public void clearEvents()
	{
		eventList.clear();
	}
	
	public List<Event> getEventsList()
	{
		return eventList;
	}
	
	public void removeRedundantEvents()
	{   
		if(eventList.isEmpty())
			return;
		
		Map<Object,Event> objectEventMap = new HashMap<Object,Event>();
		
		/*Make sure each object is mapped to its most recent event*/
		for(Event e : eventList)
		{
			for(Object obj : e.getEObjectList())
			{
				objectEventMap.put(obj, e);
			}
			
			for(Object obj : e.getEAttributeValuesList())
			{
				objectEventMap.put(obj, e);
			}
		}
		
		System.out.println(objectEventMap.size());
		System.exit(0);
	}
}
